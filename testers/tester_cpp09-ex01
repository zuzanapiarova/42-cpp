#! /bin/bash

OUTPUT_FILE="results_cpp09-ex01.txt"
PROGRAM="./RPN"
> "$OUTPUT_FILE"

# NO ARAGUMENTS
echo "Test 0: ( no arguments ) " >> "$OUTPUT_FILE"
echo "Expected: Wrong number of arguments" >> "$OUTPUT_FILE"
echo -n "Got: " >> "$OUTPUT_FILE"
$PROGRAM >> "$OUTPUT_FILE" 2>&1
echo "" >> "$OUTPUT_FILE"   # blank line between runs

# CORRECT NF WRONG INPUTS
INPUTS=("8 9 * 9 - 9 - 9 - 4 - 1 + = 42"
        "7 7 * 7 - = 42"
        "1 2 * 2 / 2 * 2 4 - + = 0"
        "1 2 3 4 5 - + - + = 1"
        "-1 1 2 * * = -2"
        "1 2 3 4 5 - + - + + = Wrong format"
        "1 + = Wrong format"
        "1 2 3 + = Wrong format"
        "1 2 a = Invalid character"
        "a 2 + = Invalid character"
        "+ 1 2 = Wrong format"
        "1 3 + 9 + 4 2 + - = 7"
        "9 1 + 9 1 + 9 1 + 9 1 + 9 1 + 9 1 + 9 1 + 9 1 + 9 1 + 9 1 + * * * * * * * * * = Integer overflow OR 10,000,000,000 - if other, means it wrapped - wrong"
        "= empty expression"
        "1 = 1 or some other handling, discuss"
        "1 0 / = Zero division error"
        )

for i in "${!INPUTS[@]}"; do
    line="${INPUTS[$i]}"
    expr="${line%%=*}"     # expression before '='
    expr=$(echo "$expr" | xargs) # trim spaces
    expected="${line#*=}"  # result after '='
    expected=$(echo "$expected" | xargs) # trim spaces

    program_output=$($PROGRAM "$expr" 2>&1)

    {
        echo "Test $((i+1)): $expr"
        echo "Expected: $expected"
        echo "Got: $program_output"
        echo ""
    } >> "$OUTPUT_FILE"
done